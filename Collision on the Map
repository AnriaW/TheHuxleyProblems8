#include <stdio.h>
#include <string.h>

void wall(int i, int j, int n, int m, int map[][m], char pos[], int sx, int sy, int quant) {
    if (i < quant) {
        if (pos[i] == 'C') {
            if (sx < n && sx - 1 >= 0) {
                if (map[sx - 1][sy] == 1) {
                    sx -= 1;
                }
            }
        } else if (pos[i] == 'B') {
            if (sx + 1 < n && sx >= 0) {
                if (map[sx + 1][sy] == 1) {
                    sx += 1;
                }
            }
        } else if (pos[i] == 'E') {
            if (sy < m && sy - 1 >= 0) {
                if (map[sx][sy - 1] == 1) {
                    sy -= 1;
                }
            }
        } else if (pos[i] == 'D') {
            if (sy + 1 < m && sy >= 0) {
                if (map[sx][sy + 1] == 1) {
                    sy += 1;
                }
            }
        }
        wall(++i, j, n, m, map, pos, sx, sy, quant);
    } else {
        printf("(%d,%d)\n", sx, sy);
    }
}

void play(int i, int n, int m, int map[][m], char pos[], int quant, int sx, int sy) {
    if (i < quant) {
        scanf(" %c", &pos[i]);
        play(i + 1, n, m, map, pos, quant, sx, sy);
    } else {
        scanf("%d%d", &sx, &sy);
        wall(0, 0, n, m, map, pos, sx, sy, quant);
    }
}

void jog(int i, int j, int n, int m, int map[][m]) {
    if (i < n) {
        if (j < m) {
            scanf("%d", &map[i][j]);
            jog(i, j + 1, n, m, map);
        } else {
            jog(i + 1, 0, n, m, map);
        }
    }
}

int main() {
    int n, m;
    scanf("%d\n%d", &n, &m);
    int map[n][m];
    jog(0, 0, n, m, map);
    int quant, sx = 0, sy = 0;
    scanf("%d", &quant);
    char pos[quant];
    play(0, n, m, map, pos, quant, sx, sy);
    return 0;
}
