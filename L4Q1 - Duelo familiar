#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <stdio.h>

int matrixdart(int i, int j, int atvad[][3], int x, int y, int luke) {
    if (i < 3) {
        if (j < 3) {
            if (i == 0 && j == 2 || i == 1 && j == 1 || i == 2 && j == 0) {
                if (atvad[i][j] == 1) x++;
                else y++;
            } else {
                if (atvad[i][j] == 0) y++;
            }
            matrixdart(i, ++j, atvad, x, y, luke);
        } else matrixdart(++i, 0, atvad, x, y, luke);
    } else {
        if (x == 3 && y == 6) {
            if (luke == 1) return 0;
            else return 1;
        } else {
            if (luke == 0 && y != 6) return 0;
            else return -1;
        }
    }
}

int madartpri(int i, int j, int atvad[][3], int x, int y, int luke) {
    if (i < 3) {
        if (j < 3) {
            if (i == j) {
                if (atvad[i][j] == 1) x++;
                else y++;
            } else {
                if (atvad[i][j] == 0) y++;
            }
            madartpri(i, ++j, atvad, x, y, luke);
        } else madartpri(++i, 0, atvad, x, y, luke);
    } else {
        if (x == 3 && y == 6) {
            if (luke == 1) return 0;
            else return 1;
        } else {
            int val = matrixdart(0, 0, atvad, 0, 0, luke);
            return val;
        }
    }
}

int matrixluk(int i, int j, int atluk[][3], int x, int y) {
    if (i < 3) {
        if (j < 3) {
            if (i == 0 && j == 2 || i == 1 && j == 1 || i == 2 && j == 0) {
                if (atluk[i][j] == 1) x++;
                else y++;
            } else {
                if (atluk[i][j] == 0) y++;
            }
            matrixluk(i, ++j, atluk, x, y);
        } else matrixluk(++i, 0, atluk, x, y);
    } else {
        if (x == 3 && y == 6) return 1;
        else return 0;
    }
}

int malukpri(int i, int j, int atluk[][3], int x, int y) {
    if (i < 3) {
        if (j < 3) {
            if (i == j) {
                if (atluk[i][j] == 1) x++;
            } else {
                if (atluk[i][j] == 0) y++;
            }
            malukpri(i, ++j, atluk, x, y);
        } else malukpri(++i, 0, atluk, x, y);
    } else {
        if (x == 3 && y == 6) {
            return 1;
        } else {
            int luke = matrixluk(0, 0, atluk, 0, 0);
            return luke;
        }
    }
}

int madart(int i, int j, int atvad[][3], int atluk[][3], int vidluk, int vidar, int *flag) {
    if (i < 3) {
        if (j < 3) {
            if (scanf("%d", &atvad[i][j]) == EOF) *flag = 1;
            madart(i, ++j, atvad, atluk, vidluk, vidar, flag);
        } else madart(++i, 0, atvad, atluk, vidluk, vidar, flag);
    } else {
        int luke = malukpri(0, 0, atluk, 0, 0);
        int val = madartpri(0, 0, atvad, 0, 0, luke);
        return val;
    }
}

int maluk(int i, int j, int atluk[][3]) {
    if (i < 3) {
        if (j < 3) {
            scanf("%d", &atluk[i][j]);
            maluk(i, ++j, atluk);
        } else maluk(++i, 0, atluk);
    }
}

void rounds(int atluk[][3], int atvad[][3], int vidar, int vidluk, int val) {
    int flag = 0;
    int x = maluk(0, 0, atluk);
    val = madart(0, 0, atvad, atluk, vidluk, vidar, &flag);

    if (val == 1) vidluk -= 15;
    else if (val == -1) vidar -= 15;

    if (flag == 1) {
        if (vidluk > vidar) printf("Luke Skywalker venceu.\n");
        else if (vidar > vidluk) printf("Darth Vader venceu.\n");
        else printf("Houve empate.\n");
    } else {
        rounds(atluk, atvad, vidar, vidluk, val);
    }
}

int main() {
    int vidluk, vidar;
    scanf("%d %d\n", &vidluk, &vidar);
    int atluk[3][3];
    int atvad[3][3];
    rounds(atluk, atvad, vidar, vidluk, 0);
    return 0;
}
